buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.0")
        classpath("com.github.jengelman.gradle.plugins:shadow:6.0.0")
    }
}

plugins {
    id("maven-publish")
}

applyPlugin("org.jetbrains.kotlin.jvm")
applyPlugin("com.github.johnrengelman.shadow")

def applyPlugin(id) {
    if (project.plugins.findPlugin(id) != null) {
        println("$id already applied")
    } else {
        apply plugin: id
    }
}

def major = 1
def minor = 0
def patch = 2

def mainVersion = [major, minor, patch].join(".")

group = "me.settingdust"
version = """$mainVersion${
    new ArrayList() {
        {
            add("")

            if (System.getenv("BUILD_NUMBER") != null)
                add(System.getenv("BUILD_NUMBER").toString())

            if (System.getenv("GITHUB_REF") == null || System.getenv("GITHUB_REF").endsWith("-dev"))
                add("unstable")
        }
    }.join("-")}"""

repositories {
    mavenCentral()
    maven {
        url = "https://repo.spongepowered.org/maven/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.spongepowered:spongeapi:7.3.0"

    api "org.spongepowered:configurate-ext-kotlin:3.7.1"

    def laven = project("laven")
    api laven
    shadow(laven) {
        exclude group: "org.jetbrains.kotlin"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/SettingDust/laven-sponge")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = project.findProperty("gpr.key") ?: System.getenv("GPR_API_KEY")
            }
        }
    }
    publications {
        create("gpr", MavenPublication) {
            from components.java
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
jar {
    actions = []
    finalizedBy shadowJar
}
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shadow]
    exclude("META-INF/**")
}